<project>
  <groupId>ryanquey.podcast-analysis-tool</groupId>
  <artifactId>podcast-analysis-tool</artifactId>
  <modelVersion>4.0.0</modelVersion>
  <name>Data Engineering Podcast Analysis Tool</name>
  <packaging>jar</packaging>
  <version>0.1.0</version>
  <dependencies>
    <!-- http client, used initially so I can do this https://github.com/rometools/rome/issues/276#issuecomment-192755732 Note though that 5.0 is out--> 
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.5.2</version>
    </dependency>

    <!-- Google core libraries for Java https://github.com/google/guava --> 
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>29.0-jre</version>
		</dependency>
    <!-- Spark dependency --> 
    <dependency> 
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-sql_2.12</artifactId>
      <version>2.4.5</version>
      <scope>provided</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple -->
    <!-- if want to stop using org.json:
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1.1</version>
		</dependency>
-->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20190722</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
		<dependency> 
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency> 
    <!-- if want to try an alternative to rome. But has less rss specific features, as far as I've seen so far
    <dependency>
      <groupId>com.thoughtworks.xstream</groupId>
        <artifactId>xstream</artifactId>
      <version>1.4.11.1</version>
    </dependency>
-->
    <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
    <!-- for use with Rome. Need to implement or they give a warning when run our package -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.30</version>
		</dependency>
    <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-simple -->
    <!-- when didn't use this one, would silently fail if we forgot to start our db before running package -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>1.7.30</version>
      <!-- <scope>test</scope> -->
    </dependency>


    <dependency>          
      <groupId>com.rometools</groupId>         
      <artifactId>rome</artifactId>           
      <version>1.12.2</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.rometools/rome-modules -->
		<dependency>
			<groupId>com.rometools</groupId>
			<artifactId>rome-modules</artifactId>
      <version>1.12.2</version>
		</dependency>
    <!-- datastax/cassandra stuff -->
		<dependency>
			<groupId>com.datastax.oss</groupId>
			<artifactId>java-driver-core</artifactId>
			<version>${java-driver.version}</version>
		</dependency>

		<dependency>
			<groupId>com.datastax.oss</groupId>
			<artifactId>java-driver-query-builder</artifactId>
			<version>${java-driver.version}</version>
		</dependency>

		<dependency>
			<groupId>com.datastax.oss</groupId>
			<artifactId>java-driver-mapper-runtime</artifactId>
			<version>${java-driver.version}</version>
		</dependency>

		<dependency>
			<groupId>com.datastax.oss</groupId>
			<artifactId>java-driver-mapper-processor</artifactId>
			<version>${java-driver.version}</version>
		</dependency>
  </dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.6.0</version>
				<configuration>
					<mainClass>${mainClass}</mainClass>
					<!-- https://stackoverflow.com/questions/15013651/using-maven-execexec-with-arguments -->
					<executable>java</executable>
					<arguments>
						<argument>-Djava.library.path=${project.build.directory}</argument>
						<argument>-classpath</argument>
						<classpath />
						<argument>${mainClass}</argument>

						<argument>--process=${searchResultsToProcess}</argument>
						<argument>--perform-search=${performSearch}</argument>
						<argument></argument>
					</arguments>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>1.8</source> <!-- (or higher) -->
					<target>1.8</target> <!-- (or higher) -->
					<annotationProcessorPaths>
						<path>
							<groupId>com.datastax.oss</groupId>
							<artifactId>java-driver-mapper-processor</artifactId>
							<version>${java-driver.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
		</plugins>
	</build>
  <properties>
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven.compiler.source>1.8</maven.compiler.source>
    <mainClass>Main</mainClass>
    <performSearch>true</performSearch>
    <searchResultsToProcess>all</searchResultsToProcess>
		<java-driver.version>4.6.1</java-driver.version>
	</properties>
</project>
